#nstats {
    font-size: 2em;
    margin: 25px 0;
    font-weight: 500;
    color: #444;
}

/* styles.css */

/* 全体のデザイン */
body {
    font-family: 'Noto Sans JP', sans-serif;
    background: linear-gradient(to bottom, #f5f7fa, #e4ebf1);
    color: #333;
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
}

/* 最終評価 */
.final-status-table th.vocal {
    color: red;

}

.final-status-table th.dance {
    color: rgb(116, 149, 255);

}

.final-status-table th.visual {
    color: gold;

}

.final-evaluation {
    background-color: #ffffff;
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    text-align: center;
    max-width: 400px;
    width: 100%;
}

.final-evaluation h2 {
    font-size: 1.8rem;
    margin-bottom: 10px;
}

.evaluation-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
}

.evaluation-container img {
    width: 120px;
    height: 120px;
    object-fit: contain;
}

.final-status-table {
    background-color: #b5f0ff;
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    max-width: 600px;
    width: 100%;
}

.final-status-table h2 {
    font-size: 1.8rem;
    margin-bottom: 10px;
    text-align: center;
}

.status-container {
    overflow-x: auto;
}

.status-container table {
    width: 100%;
    border-collapse: collapse;
    text-align: center;
}

.status-container th,
.status-container td {
    padding: 10px 15px;
    border-bottom: 1px solid #ddd;
    font-size: 1rem;
    background-color: #fff;
    /* 完全なフラットデザイン */
}

.final-status-table th,
.final-status-table td {
    white-space: nowrap; /* テキストの改行を防ぐ */
}

.final-status-table th {
    min-width: 50px; /* 必要に応じて最小幅を指定 */
}

.final-status-table td {
    text-align: center;
    vertical-align: middle;
}

/* 交互の背景色削除 */
.status-container tr:nth-child(even),
.status-container tr:nth-child(odd) {
    background-color: transparent;
}

/* マウスホバーで色変更を無効化 */
.status-container tr:hover {
    background-color: inherit;
}

/* ヘッダーのデザイン */
.status-container th {
    background-color: #6b6b6b;
    color: #fff;
}

/* レスポンシブ対応 */
@media (max-width: 768px) {
    .evaluation-container img {
        width: 80px;
        height: 80px;
    }

    .final-status-table {
        max-width: 100%;
    }
}

/* フィルターボタンスタイル */
.filter-container {
    display: flex;
    gap: 10px;
    justify-content: center;
    margin-bottom: 10px;
}

.filter-button {
    width: 40px;
    height: 40px;
    cursor: pointer;
    transition: transform 0.2s;
    opacity: 0.6;
}

.filter-button.active {
    opacity: 1;
    transform: scale(1.1);
}

#image-cell img {
    width: 70px;
    /* お好みのサイズに変更 */
    height: auto;
    /* 縦横比を維持 */
    max-width: 100%;
    /* レスポンシブ対応 */
}

.container {
    display: flex;
    gap: 20px;
    padding: 20px;
}

#selected-character {
    width: 200px;
    cursor: pointer;
    border: 2px solid #ccc;
    border-radius: 8px;
}

/* 新しい横並び用のラッパー */
.character-support-container {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    gap: 40px;
    /* キャラとサポカの間 */
    padding: 20px;
}

/* キャラ画像＋凸ボタンを縦に並べる */
.character-container {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* サポカ1枚分を縦並びのブロックに */
.support-card {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* サポカ6枚をグリッド表示に（既存の定義をそのまま使用） */
#support-container {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /* 柔軟な幅にするならこちら */
    gap: 16px;
}

/* サポカ画像サイズ */
.support-image {
    width: 177px;
    height: 100px;
    object-fit: cover;
    cursor: pointer;
    border: 2px solid #ccc;
    border-radius: 6px;
}

/* サポカ凸ボタン（既存の .limit-break-control などは使い回せる） */
.support-card .limit-break-control {
    margin-top: 8px;
}

.modal {
    display: none;
    position: fixed;
    z-index: 10;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.5);
}

.modal-content {
    background-color: #fff;
    margin: 5% auto;
    padding: 20px;
    width: 80%;
    max-width: 800px;
    border-radius: 10px;
    position: relative;
}

.image-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    justify-content: center;
}

.limit-break-control {
    margin-top: 12px;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 12px;
    font-family: 'Noto Sans JP', sans-serif;
}

.limit-btn {
    background: linear-gradient(to right, #6fb1fc, #4364f7);
    color: white;
    border: none;
    border-radius: 6px;
    padding: 8px 14px;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    transition: filter 0.3s ease;
}

.limit-btn:hover {
    filter: brightness(1.1);
}

.limit-display {
    font-size: 18px;
    font-weight: bold;
    color: #333;
    padding: 4px 10px;
    border: 2px solid #4364f7;
    border-radius: 8px;
    min-width: 50px;
    text-align: center;
    background: #f0f7ff;
}

.limit-btn2 {
    background: linear-gradient(to right, #fcd66f, #f7a343);
    color: white;
    border: none;
    border-radius: 6px;
    padding: 8px 14px;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    transition: filter 0.3s ease;
    margin-top: 10px; /* 上に10pxのスペースを追加 */
}

.limit-btn2:hover {
    filter: brightness(1.1);
}

.limit-btn-kuro {
    background: linear-gradient(to right, #ccffae, #8bff3d);
    color: white;
    border: none;
    border-radius: 6px;
    padding: 8px 14px;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    transition: filter 0.3s ease;
}

.limit-btn-kuro:hover {
    filter: brightness(1.1);
}

.limit-kuro-display {
    font-size: 18px;
    font-weight: bold;
    color: #333;
    padding: 4px 10px;
    border: 2px solid #797979;
    border-radius: 8px;
    min-width: 50px;
    text-align: center;
    background: #f0f7ff;
}

.limit-btn-vo {
    background: linear-gradient(to right, #ffaaaa, #ff5e5e) !important;
    color: white;
    border: none;
    border-radius: 6px;
    padding: 8px 14px;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    transition: filter 0.3s ease;
}

.limit-btn-vo:hover {
    filter: brightness(1.1);
}

.limit-vo-display {
    font-size: 18px;
    font-weight: bold;
    color: #333;
    padding: 4px 10px;
    border: 2px solid #f74343;
    border-radius: 8px;
    min-width: 50px;
    text-align: center;
    background: #f0f7ff;
}

.limit-btn-da {
    background: linear-gradient(to right, #6fb1fc, #4364f7) !important;
    color: white;
    border: none;
    border-radius: 6px;
    padding: 8px 14px;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    transition: filter 0.3s ease;
}

.limit-btn-da:hover {
    filter: brightness(1.1);
}

.limit-da-display {
    font-size: 18px;
    font-weight: bold;
    color: #333;
    padding: 4px 10px;
    border: 2px solid #4364f7;
    border-radius: 8px;
    min-width: 50px;
    text-align: center;
    background: #f0f7ff;
}

.limit-btn-vi {
    background: linear-gradient(to right, #fff19e, #ffb71b) !important;
    color: white;
    border: none;
    border-radius: 6px;
    padding: 8px 14px;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    transition: filter 0.3s ease;
}

.limit-btn-vi:hover {
    filter: brightness(1.1);
}

.limit-vi-display {
    font-size: 18px;
    font-weight: bold;
    color: #333;
    padding: 4px 10px;
    border: 2px solid #ffdf2b;
    border-radius: 8px;
    min-width: 50px;
    text-align: center;
    background: #f0f7ff;
}

/* ↓ キャラ用モーダル画像サイズ */
.character-modal-image {
    width: 100px;
    height: 100px;
    object-fit: cover;
    cursor: pointer;
    border: 2px solid transparent;
    border-radius: 5px;
}

/* ↓ サポカ用モーダル画像サイズ */
.support-modal-image {
    width: 177px;
    height: 100px;
    object-fit: cover;
    cursor: pointer;
    border: 2px solid transparent;
    border-radius: 5px;
}

.image-grid img:hover {
    border-color: #333;
}

.close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 24px;
    font-weight: bold;
    color: #444;
    cursor: pointer;
}

/* 表を横に並べるための親要素 */
.tables-container {
    display: flex;
    gap: 20px; /* テーブル間のスペース */
    justify-content: space-between; /* テーブルを横に並べる */
    flex-wrap: wrap; /* 画面サイズに応じて折り返し */
}

/* ↓ レッスンの表 */
table {
    border-collapse: collapse;
    background: black;
    color: white;
    font-family: sans-serif;
    width: 48%; /* テーブルの幅を調整（2つ並べる場合） */
    margin: 0;
}

th,
td {
    border: 1px solid #444;
    padding: 5px 10px;
    text-align: center;
}

th {
    background: black;
}

.kuro {
    color: rgb(19, 19, 19);
}

.siro {
    color: rgb(255, 255, 255);
    background-color: #6b6b6b !important;
}

.vo {
    color: red;
}

.da {
    color: rgb(116, 149, 255);
}

.vi {
    color: gold;
}

.sp {
    color: rgb(197, 197, 197);
}

.big {
    color: rgb(197, 197, 197);
}

.試験 {
    color: rgb(201, 63, 255);
}

.出 {
    color: rgb(0, 217, 255);
}

.相 {
    color: rgb(0, 255, 21);
}

.差 {
    color: rgb(255, 153, 0);
}

.特 {
    color: rgb(0, 163, 0);
}

.休 {
    color: rgb(197, 197, 197);
}

th.数,
td.数 {
    width: 70px;
    /* 必要に応じて小さくしてOK */
}

.box {
    width: 20px;
    height: 20px;
    display: inline-block;
    border: 2px solid currentColor;
    border-radius: 3px;
    cursor: pointer;
    position: relative;
}

.memory-box {
    width: 20px;
    height: 20px;
    display: inline-block;
    border: 2px solid currentColor;
    border-radius: 3px;
    cursor: pointer;
    position: relative;
}

.checked {
    background: currentColor;
}

.checked::after {
    content: '✔';
    color: white;
    font-size: 14px;
    position: absolute;
    top: -1px;
    left: 3px;
}

input[type="number"] {
    width: 60px;
    /* 実際の入力欄の幅も狭める */
    text-align: right;
}

.results {
    margin-top: 1em;
    font-size: 14px;
}